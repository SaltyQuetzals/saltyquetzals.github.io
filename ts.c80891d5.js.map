{"version":3,"sources":["ts/index.ts"],"names":[],"mappings":";AAqCA,aArCA,IAAM,EAAuB,KAOvB,EAAgC,CACpC,CAAC,KAAM,CAAC,aAAc,WACtB,CAAC,KAAM,CAAC,cAAe,cACvB,CAAC,KAAM,CAAC,UAAW,YACnB,CAAC,KAAM,CAAC,eAAgB,UACxB,CAAC,KAAM,CAAC,OAAQ,aAChB,CAAC,KAAM,CAAC,UAAW,aAGf,EAAmB,SAAC,GAClB,IAAA,EAAqC,CAAC,KAAM,CAAC,KAC/C,GAAoB,SAApB,EAAQ,QACV,EAAiB,KAAO,CAAC,EAAQ,iBAC5B,CAAA,GAAwB,QAApB,EAAQ,QAKX,MAAA,IAAI,MAAM,oDAJV,IAAA,EAAM,EAAQ,uBAAuB,eAAe,GAAG,YACvD,EAAO,EAAQ,uBAAuB,QAAQ,GAAG,YACvD,EAAiB,KAAO,CAAC,EAAK,GAOzB,OAHH,EAAQ,UAAU,SAAS,gBAC7B,EAAiB,YAAa,GAEzB,GAGH,EAAc,SAClB,GACG,OAAA,KAAK,MAAM,KAAK,SAAW,EAAW,SAE3C,YAAY,WAAZ,IAAA,EAQM,EAPE,EAAyB,SAAS,uBAAuB,OACzD,EAAgC,EAAY,GAC5C,EAAuB,EAAY,GAEnC,EAAe,EAAuB,GACtC,EAAe,EAAiB,GAChC,EAAW,EAAU,OAAO,EAAsB,EAAG,GAAc,GAErE,GAAyB,IAAzB,EAAS,KAAK,OAAc,CACvB,IAAA,EAAc,EAAS,KAAI,GAClC,EAAS,SAAS,cAAc,QAC1B,IAAA,EAAW,SAAS,eAAe,GACzC,EAAO,YAAY,GACnB,EAAO,UAAY,UACd,CACC,IAAA,EAAqB,EAAS,KAAjB,GAAZ,EAAU,EAAA,GAAM,EAAA,IACvB,EAAS,SAAS,cAAc,OAE1B,IAAA,EAAiB,SAAS,cAAc,QACxC,EAAiB,SAAS,eAAe,GAC/C,EAAe,YAAY,GAC3B,EAAe,UAAY,cAC3B,EAAO,YAAY,GAEb,IAAA,EAAW,SAAS,cAAc,QAClC,EAAe,SAAS,eAAe,GAC7C,EAAS,YAAY,GACrB,EAAS,UAAY,OACrB,EAAO,YAAY,GAEnB,EAAO,UAAY,MACnB,QAAQ,IAAI,EAAO,WAEjB,EAAS,YACX,EAAO,UAAU,IAAI,cAEA,QAAvB,EAAA,EAAa,kBAAU,IAAA,GAAA,EAAE,aAAa,EAAQ,IAC7C","file":"ts.c80891d5.js","sourceRoot":"../src","sourcesContent":["const REPLACEMENT_INTERVAL = 2500;\n\ninterface TextWithEmphasis {\n  text: [string] | [string, string];\n  emphasized?: boolean;\n}\n\nconst TEXT_POOL: TextWithEmphasis[] = [\n  {text: ['filer text', 'filled']},\n  {text: ['lorem ipsum', 'dolor sic']},\n  {text: ['ipswich', 'england']},\n  {text: ['port aransas', 'texas']},\n  {text: ['apps', 'schmapps']},\n  {text: ['vanilla', 'extract']},\n];\n\nconst elementToStorage = (element: Element): TextWithEmphasis => {\n  const textWithEmphasis: TextWithEmphasis = {text: ['']};\n  if (element.tagName === 'SPAN') {\n    textWithEmphasis.text = [element.textContent!];\n  } else if (element.tagName === 'DIV') {\n    const tag = element.getElementsByClassName('normal-text')[0].textContent!;\n    const quip = element.getElementsByClassName('quip')[0].textContent!;\n    textWithEmphasis.text = [tag, quip];\n  } else {\n    throw new Error('Only DIVs and SPANs can be converted to storage.');\n  }\n  if (element.classList.contains('emphasized')) {\n    textWithEmphasis.emphasized = true;\n  }\n  return textWithEmphasis;\n};\n\nconst randomIndex = (\n  collection: TextWithEmphasis[] | HTMLCollectionOf<Element>\n) => Math.floor(Math.random() * collection.length);\n\nsetInterval(() => {\n  const currentlyDisplayedTags = document.getElementsByClassName('tag');\n  const randomCurrentlyDisplayedIndex = randomIndex(currentlyDisplayedTags);\n  const randomIndexOfTagPool = randomIndex(TEXT_POOL);\n\n  const tagToReplace = currentlyDisplayedTags[randomCurrentlyDisplayedIndex];\n  const valueToStore = elementToStorage(tagToReplace);\n  const newValue = TEXT_POOL.splice(randomIndexOfTagPool, 1, valueToStore)[0];\n  let newTag: Element;\n  if (newValue.text.length === 1) {\n    const [normalText] = newValue.text;\n    newTag = document.createElement('span');\n    const textNode = document.createTextNode(normalText);\n    newTag.appendChild(textNode);\n    newTag.className = 'tag';\n  } else {\n    const [normalText, quip] = newValue.text;\n    newTag = document.createElement('div');\n\n    const normalTextSpan = document.createElement('span');\n    const normalTextNode = document.createTextNode(normalText);\n    normalTextSpan.appendChild(normalTextNode);\n    normalTextSpan.className = 'normal-text';\n    newTag.appendChild(normalTextSpan);\n\n    const quipSpan = document.createElement('span');\n    const quipTextNode = document.createTextNode(quip);\n    quipSpan.appendChild(quipTextNode);\n    quipSpan.className = 'quip';\n    newTag.appendChild(quipSpan);\n\n    newTag.className = 'tag';\n    console.log(newTag.innerHTML);\n  }\n  if (newValue.emphasized) {\n    newTag.classList.add('emphasized');\n  }\n  tagToReplace.parentNode?.replaceChild(newTag, tagToReplace);\n}, REPLACEMENT_INTERVAL);\n"]}